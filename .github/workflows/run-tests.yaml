name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
#  convert-model:
#    runs-on: ubuntu-latest
#    env:
#      BLOOM_TESTING_WRITE_TOKEN: ${{ secrets.BLOOM_TESTING_WRITE_TOKEN }}
#    timeout-minutes: 15
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.9
#      - name: Cache dependencies
#        uses: actions/cache@v2
#        with:
#          path: ~/.cache/pip
#          key: Key-v1-py3.9-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Convert small model
#        run: |
#          python -m cli.convert_model --model bigscience/bloom-350m  --output_path ./converted_model \
#            --output_repo bloom-testing/test-bloomd-350m   --use_auth_token $BLOOM_TESTING_WRITE_TOKEN


  run-tests:
    runs-on: ubuntu-latest
    #needs: convert-model
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: Key-v1-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Test
        run: |

          hivemind-dht &> dht.log &
          INITIAL_PID=$$
          sleep 3
          export INITIAL_PEERS=$(python -c "with open('dht.log') as f: print(f.readlines()[1].split()[-1])" )
          echo "Initial peer: ${INITIAL_PEERS}"
          cat dht.log
          
          python -m cli.run_server --converted_model_name_or_path bloom-testing/test-bloomd-350m \
            --block_indices 0:12 --torch_dtype float32 --initial_peers $INITIAL_PEERS --throughput 1 &
          SERVER1_PID=$$
          
          sleep 60  # wait for server to download layers
          
          # test individual blocks
          export PYTHONPATH=. REF_NAME=bloom-testing/test-bloomd-350m
          BLOCK_UID=bloom-testing/test-bloomd-350m.0 REF_INDEX=0 pytest tests/test_block_exact_match.py
          BLOCK_UID=bloom-testing/test-bloomd-350m.4 REF_INDEX=4 pytest tests/test_block_exact_match.py

          kill $INITIAL_PID $SERVER1_PID
